// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/message_types.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AudioMessage;
@class MessageMeta;
@class MessageState;
@class PhotoMessage;
@class Receiver;
@class Sender;
@class TextMessage;
@class VideoMessage;
@class VoiceMessage;
GPB_ENUM_FWD_DECLARE(ChatTypeEnum);
GPB_ENUM_FWD_DECLARE(MessageTypeEnum);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - MessageTypesRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MessageTypesRoot : GPBRootObject
@end

#pragma mark - MessageState

typedef GPB_ENUM(MessageState_FieldNumber) {
  MessageState_FieldNumber_Read = 1,
  MessageState_FieldNumber_Delivered = 2,
  MessageState_FieldNumber_Edited = 3,
};

GPB_FINAL @interface MessageState : GPBMessage

@property(nonatomic, readwrite) BOOL read;

@property(nonatomic, readwrite) BOOL delivered;

@property(nonatomic, readwrite) int64_t edited;

@end

#pragma mark - MessageMeta

typedef GPB_ENUM(MessageMeta_FieldNumber) {
  MessageMeta_FieldNumber_Created = 1,
};

GPB_FINAL @interface MessageMeta : GPBMessage

@property(nonatomic, readwrite) int64_t created;

@end

#pragma mark - TextMessage

typedef GPB_ENUM(TextMessage_FieldNumber) {
  TextMessage_FieldNumber_Content = 1,
};

GPB_FINAL @interface TextMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

#pragma mark - AudioMessage

typedef GPB_ENUM(AudioMessage_FieldNumber) {
  AudioMessage_FieldNumber_FileId = 1,
  AudioMessage_FieldNumber_Duration = 2,
  AudioMessage_FieldNumber_FileSize = 3,
  AudioMessage_FieldNumber_MimeType = 4,
  AudioMessage_FieldNumber_FileName = 5,
};

GPB_FINAL @interface AudioMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileId;

@property(nonatomic, readwrite) int64_t duration;

@property(nonatomic, readwrite) int64_t fileSize;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mimeType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;

@end

#pragma mark - VoiceMessage

typedef GPB_ENUM(VoiceMessage_FieldNumber) {
  VoiceMessage_FieldNumber_FileId = 1,
  VoiceMessage_FieldNumber_Duration = 2,
  VoiceMessage_FieldNumber_FileSize = 3,
  VoiceMessage_FieldNumber_MimeType = 4,
  VoiceMessage_FieldNumber_FileName = 5,
};

GPB_FINAL @interface VoiceMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileId;

@property(nonatomic, readwrite) int64_t duration;

@property(nonatomic, readwrite) int64_t fileSize;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mimeType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;

@end

#pragma mark - PhotoMessage

typedef GPB_ENUM(PhotoMessage_FieldNumber) {
  PhotoMessage_FieldNumber_FileId = 1,
  PhotoMessage_FieldNumber_FileSize = 2,
  PhotoMessage_FieldNumber_MimeType = 3,
  PhotoMessage_FieldNumber_FileName = 4,
  PhotoMessage_FieldNumber_Width = 5,
  PhotoMessage_FieldNumber_Height = 6,
  PhotoMessage_FieldNumber_Preview = 8,
};

GPB_FINAL @interface PhotoMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileId;

@property(nonatomic, readwrite) int64_t fileSize;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mimeType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;

@property(nonatomic, readwrite) int32_t width;

@property(nonatomic, readwrite) int32_t height;

@property(nonatomic, readwrite, copy, null_resettable) NSData *preview;

@end

#pragma mark - VideoMessage

typedef GPB_ENUM(VideoMessage_FieldNumber) {
  VideoMessage_FieldNumber_FileId = 1,
  VideoMessage_FieldNumber_Duration = 2,
  VideoMessage_FieldNumber_FileSize = 3,
  VideoMessage_FieldNumber_MimeType = 4,
  VideoMessage_FieldNumber_FileName = 5,
  VideoMessage_FieldNumber_Width = 6,
  VideoMessage_FieldNumber_Height = 7,
  VideoMessage_FieldNumber_Preview = 8,
};

GPB_FINAL @interface VideoMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileId;

@property(nonatomic, readwrite) int64_t duration;

@property(nonatomic, readwrite) int64_t fileSize;

@property(nonatomic, readwrite, copy, null_resettable) NSString *mimeType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;

@property(nonatomic, readwrite) int32_t width;

@property(nonatomic, readwrite) int32_t height;

@property(nonatomic, readwrite, copy, null_resettable) NSData *preview;

@end

#pragma mark - Sender

typedef GPB_ENUM(Sender_FieldNumber) {
  Sender_FieldNumber_UserId = 1,
  Sender_FieldNumber_DeviceId = 2,
};

GPB_FINAL @interface Sender : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@end

#pragma mark - Receiver

typedef GPB_ENUM(Receiver_FieldNumber) {
  Receiver_FieldNumber_UserId = 1,
  Receiver_FieldNumber_ChatId = 2,
};

GPB_FINAL @interface Receiver : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *chatId;

@end

#pragma mark - Message

typedef GPB_ENUM(Message_FieldNumber) {
  Message_FieldNumber_Id_p = 1,
  Message_FieldNumber_Receiver = 2,
  Message_FieldNumber_Sender = 3,
  Message_FieldNumber_State = 4,
  Message_FieldNumber_Meta = 5,
  Message_FieldNumber_ChatType = 6,
  Message_FieldNumber_SeqNumber = 7,
  Message_FieldNumber_Type = 8,
  Message_FieldNumber_Text = 9,
  Message_FieldNumber_Audio = 10,
  Message_FieldNumber_Voice = 11,
  Message_FieldNumber_Photo = 12,
  Message_FieldNumber_Video = 13,
};

typedef GPB_ENUM(Message_Content_OneOfCase) {
  Message_Content_OneOfCase_GPBUnsetOneOfCase = 0,
  Message_Content_OneOfCase_Text = 9,
  Message_Content_OneOfCase_Audio = 10,
  Message_Content_OneOfCase_Voice = 11,
  Message_Content_OneOfCase_Photo = 12,
  Message_Content_OneOfCase_Video = 13,
};

GPB_FINAL @interface Message : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite, strong, null_resettable) Receiver *receiver;
/** Test to see if @c receiver has been set. */
@property(nonatomic, readwrite) BOOL hasReceiver;

@property(nonatomic, readwrite, strong, null_resettable) Sender *sender;
/** Test to see if @c sender has been set. */
@property(nonatomic, readwrite) BOOL hasSender;

@property(nonatomic, readwrite, strong, null_resettable) MessageState *state;
/** Test to see if @c state has been set. */
@property(nonatomic, readwrite) BOOL hasState;

@property(nonatomic, readwrite, strong, null_resettable) MessageMeta *meta;
/** Test to see if @c meta has been set. */
@property(nonatomic, readwrite) BOOL hasMeta;

@property(nonatomic, readwrite) enum ChatTypeEnum chatType;

@property(nonatomic, readwrite) uint64_t seqNumber;

@property(nonatomic, readwrite) enum MessageTypeEnum type;

@property(nonatomic, readonly) Message_Content_OneOfCase contentOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) TextMessage *text;

@property(nonatomic, readwrite, strong, null_resettable) AudioMessage *audio;

@property(nonatomic, readwrite, strong, null_resettable) VoiceMessage *voice;

@property(nonatomic, readwrite, strong, null_resettable) PhotoMessage *photo;

@property(nonatomic, readwrite, strong, null_resettable) VideoMessage *video;

@end

/**
 * Fetches the raw value of a @c Message's @c chatType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Message_ChatType_RawValue(Message *message);
/**
 * Sets the raw value of an @c Message's @c chatType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMessage_ChatType_RawValue(Message *message, int32_t value);

/**
 * Fetches the raw value of a @c Message's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Message_Type_RawValue(Message *message);
/**
 * Sets the raw value of an @c Message's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetMessage_Type_RawValue(Message *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'content'.
 **/
void Message_ClearContentOneOfCase(Message *message);

#pragma mark - MessagesRange

typedef GPB_ENUM(MessagesRange_FieldNumber) {
  MessagesRange_FieldNumber_MaxSeqNumber = 2,
  MessagesRange_FieldNumber_MinSeqNumber = 3,
};

/**
 * Represents messages range based on sequence number
 * of message
 **/
GPB_FINAL @interface MessagesRange : GPBMessage

/**
 * Only required property. For example if required to mark
 * only one message as "read" or "delivered" only this value
 * can be provided
 **/
@property(nonatomic, readwrite) uint64_t maxSeqNumber;

/**
 * Minimal seq number of messages range. If not provided then
 * it's requal to "max_seq_number"
 **/
@property(nonatomic, readwrite) uint64_t minSeqNumber;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
