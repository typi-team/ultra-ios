// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enumerated/enumerated.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum DeviceEnum

typedef GPB_ENUM(DeviceEnum) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  DeviceEnum_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  DeviceEnum_Web = 0,
  DeviceEnum_Ios = 1,
  DeviceEnum_Android = 2,
};

GPBEnumDescriptor *DeviceEnum_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL DeviceEnum_IsValidValue(int32_t value);

#pragma mark - Enum ChatTypeEnum

typedef GPB_ENUM(ChatTypeEnum) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ChatTypeEnum_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ChatTypeEnum_PeerToPeer = 0,
  ChatTypeEnum_SimpleGroup = 1,
  ChatTypeEnum_Group = 2,
  ChatTypeEnum_Channel = 3,
};

GPBEnumDescriptor *ChatTypeEnum_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChatTypeEnum_IsValidValue(int32_t value);

#pragma mark - Enum MessageTypeEnum

typedef GPB_ENUM(MessageTypeEnum) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MessageTypeEnum_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  MessageTypeEnum_Text = 0,
  MessageTypeEnum_Audio = 1,
  MessageTypeEnum_Voice = 2,
  MessageTypeEnum_Photo = 3,
  MessageTypeEnum_Video = 4,
  MessageTypeEnum_File = 5,
};

GPBEnumDescriptor *MessageTypeEnum_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MessageTypeEnum_IsValidValue(int32_t value);

#pragma mark - Enum UserStatusEnum

typedef GPB_ENUM(UserStatusEnum) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UserStatusEnum_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  UserStatusEnum_Unknown = 0,
  UserStatusEnum_Online = 1,
  UserStatusEnum_Offline = 2,
};

GPBEnumDescriptor *UserStatusEnum_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UserStatusEnum_IsValidValue(int32_t value);

#pragma mark - Enum PhotoSize

/** Available photo sizes */
typedef GPB_ENUM(PhotoSize) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PhotoSize_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /**
   * Image size with applied gaussian blur filter.
   * Width is 100, quality will be decreased to 50%,
   * can be used for preview photos
   **/
  PhotoSize_Blur = 0,

  /** width=100, quality=90%, height will be changed by keeping sides ratio */
  PhotoSize_S = 1,

  /** width=2560, quality=90%, height will be changed by keeping sides ratio */
  PhotoSize_W = 2,

  /** width=1280, quality=90%, height will be changed by keeping sides ratio */
  PhotoSize_Y = 3,

  /** width=800, quality=90%, height will be changed by keeping sides ratio */
  PhotoSize_X = 4,

  /** width=320, quality=90%, height will be changed by keeping sides ratio */
  PhotoSize_M = 5,
};

GPBEnumDescriptor *PhotoSize_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PhotoSize_IsValidValue(int32_t value);

#pragma mark - EnumeratedRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface EnumeratedRoot : GPBRootObject
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
