//
//  ConversationViewController.swift
//  Pods
//
//  Created by Slam on 4/25/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class ConversationViewController: BaseViewController<ConversationPresenterInterface> {
    // MARK: - Properties
    
    private var messages: [Message] = []
    
    // MARK: - Views
    
    private lazy var chatTableView: UITableView = .init {[weak self] tableView in
        tableView.delegate = self
        
        tableView.dataSource = self
        tableView.separatorStyle = .none
        tableView.tableFooterView = UIView()
        tableView.registerCell(type: BaseMessageCell.self)
        tableView.backgroundView = UIImageView({
            $0.contentMode = .scaleAspectFill
            $0.image = .named("conversation_background")
        })
    }
    
    private lazy var messageInputBar: MessageInputBar = .init({ [weak self] inputBar in
        inputBar.delegate = self
    })
    
    
    // MARK: - Lifecycle
    
    
    // MARK: - Private Methods
    
    override func setupViews() {
        super.setupViews()
        view.addSubview(chatTableView)
        view.addSubview(messageInputBar)
    }
    
    override func setupConstraints() {
        super.setupConstraints()
        chatTableView.snp.makeConstraints { make in
            make.top.equalTo(view.safeAreaLayoutGuide.snp.topMargin)
            make.leading.trailing.equalToSuperview()
            make.bottom.equalTo(messageInputBar.snp.topMargin).offset(-10)
        }
        
        messageInputBar.snp.makeConstraints { make in
            make.leading.trailing.equalToSuperview()
            make.bottom.equalTo(view.safeAreaLayoutGuide.snp.bottomMargin)
        }
    }
}


    // MARK: - UITableViewDataSource

extension ConversationViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return messages.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell:BaseMessageCell = tableView.dequeueCell()
        cell.setup(message: messages[indexPath.row])
        return cell
    }
}

    // MARK: - UITableViewDelegate

extension ConversationViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableViewAutomaticDimension
    }
}

    // MARK: - UITextViewDelegate

extension ConversationViewController: MessageInputBarDelegate {
    func exchanges() {

    }
    
    func micro(isActivated: Bool) {
        
    }
    
    func message(text: String) {
        var message = Message()
        message.text.content = text
        message.meta.created = Date().nanosec
        messages.append(message)
        chatTableView.reloadData()
        chatTableView.scrollToRow(at: IndexPath(row: messages.count - 1, section: 0), at: .bottom, animated: true)
    }
}

// MARK: - Extensions -

extension ConversationViewController: ConversationViewInterface {
}
