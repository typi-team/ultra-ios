//
//  ContactsBookViewController.swift
//  Pods
//
//  Created by Slam on 4/21/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxCocoa
import RxSwift
import RealmSwift
import RxDataSources

final class ContactsBookViewController: BaseViewController<ContactsBookPresenterInterface> {

    // MARK: - Public properties -
    
    fileprivate lazy var permissionData = PermissionStateViewData(imageName: "contacts_centered_card",
                                                                  headline: "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º",
                                                                  subline: "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–∞–º.",
                                                                  action: { [weak self] in
        UIApplication.shared.open(URL(string: UIApplicationOpenSettingsURLString)!, options: [:], completionHandler: nil)
                                                                  })
    fileprivate lazy var backgroundView: PermissionStateView = .init(data: permissionData)

    fileprivate let tableView: UITableView = {
        if #available(iOS 13.0, *) {
            return .init(frame: .zero, style: .insetGrouped)
        } else {
            return .init()
        }
    }()
    
    // MARK: - Lifecycle -
    
    override func setupViews() {
        super.setupViews()
        self.navigationItem.rightBarButtonItem = .init(image: .named("close"), style: .plain, target: self, action: #selector(close(_:)))
        self.navigationItem.title = "–ù–æ–≤—ã–π —á–∞—Ç"
        self.view.addSubview(tableView)
        
        self.tableView.rowHeight = 50
        self.tableView.separatorStyle = .singleLine
        self.tableView.registerCell(type: ContactCell.self)
        self.tableView.separatorInset = .init(top: 0, left: 32, bottom: 0, right: 16)
        
        self.presenter?
            .contacts
            .bind(to: tableView.rx.items) { tableView, _, contact in
                let cell: ContactCell = tableView.dequeueCell()
                cell.setup(contact: contact)
                return cell
            }.disposed(by: disposeBag)
        
        self.tableView
            .rx.itemSelected
            .asDriver()
            .drive(onNext: { [weak self] index in
                guard let `self` = self else { return }
                self.tableView.deselectRow(at: index, animated: true)
            })
            .disposed(by: disposeBag)
        
        self.tableView.rx
            .modelSelected(ContactDisplayable.self)
            .asDriver()
            .drive { [weak self ] contact in
                guard let `self` = self else { return }
                self.presenter?.openConversation(with: contact)
            }
            .disposed(by: disposeBag)
    }
    
    override func setupConstraints() {
        super.setupConstraints()
        self.tableView.snp.makeConstraints { make in
            make.edges.equalToSuperview()
        }
    }
    
    override func setupInitialData() {
        self.presenter?.initial()
    }
}

// MARK: - Extensions -

extension ContactsBookViewController: ContactsBookViewInterface {
    func permission(is denied: Bool) {
        if denied {
            self.tableView.backgroundView = self.backgroundView
        } else {
            self.tableView.backgroundView = nil
        }
    }
}
