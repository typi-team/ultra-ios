//
//  ContactsBookViewController.swift
//  Pods
//
//  Created by Slam on 4/21/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import RxCocoa
import RxSwift
import RealmSwift
import RxDataSources

final class ContactsBookViewController: BaseViewController<ContactsBookPresenterInterface> {

    // MARK: - Public properties -

    fileprivate let tableView: UITableView = .init {
        $0.estimatedRowHeight = 80
        $0.rowHeight = UITableViewAutomaticDimension
    }
    // MARK: - Lifecycle -
    
    override func setupViews() {
        super.setupViews()
        self.navigationItem.titleView = HeadlineBody { $0.text = "–ù–æ–≤—ã–π —á–∞—Ç" }
        self.view.addSubview(tableView)

        self.tableView.registerCell(type: ContactCell.self)
        self.tableView.separatorStyle = .none
        self.presenter?
            .contacts
            .bind(to: tableView.rx.items) { tableView, _, contact in
                let cell: ContactCell = tableView.dequeueCell()
                cell.setup(contact: contact)
                return cell
            }.disposed(by: disposeBag)
        
        self.tableView.rx
            .modelSelected(DBContact.self)
            .asDriver()
            .drive { [weak self ] contact in
                guard let `self` = self else { return }
                self.presenter?.openConversation(with: contact)
            }
            .disposed(by: disposeBag)
    }
    
    override func setupConstraints() {
        super.setupConstraints()
        self.tableView.snp.makeConstraints { make in
            make.edges.equalToSuperview()
        }
    }
    override func setupInitialData() {
        self.presenter?.initial()
    }

}

// MARK: - Extensions -

extension ContactsBookViewController: ContactsBookViewInterface {
}
