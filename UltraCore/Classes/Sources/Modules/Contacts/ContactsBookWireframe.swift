//
//  ContactsBookWireframe.swift
//  Pods
//
//  Created by Slam on 4/21/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class ContactsBookWireframe: BaseWireframe<ContactsBookViewController> {

    // MARK: - Private properties -

    // MARK: - Module setup -

    init(contactsCallback: @escaping ContactsCallback) {
        let moduleViewController = ContactsBookViewController()

        super.init(viewController: moduleViewController)

        let syncInteractor = SyncContactsInteractor(contactsService: appSettings.contactsService)
        let contactImageInteractor = ContactDownloadInteractor(mediaUtils: MediaUtils(), appStore: appSettings.appStore)

        let presenter = ContactsBookPresenter(appStore: appSettings.appStore,
                                              view: moduleViewController,
                                              contactsRepository: appSettings.contactRepository,
                                              wireframe: self,
                                              contactsCallback: contactsCallback,
                                              contactImageDownloadInteractor: contactImageInteractor,
                                              syncContact: syncInteractor,
                                              bookContacts: ContactsBookInteractor())
        moduleViewController.presenter = presenter
    }
}

// MARK: - Extensions -

extension ContactsBookWireframe: ContactsBookWireframeInterface {
    func openConversation(with contact: ContactDisplayable) {
        self.navigationController?.pushWireframe(ConversationWireframe(with: ConversationImpl(contact: contact)))
    }
}
