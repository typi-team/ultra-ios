//
//  SignUpViewController.swift
//  Pods
//
//  Created by Slam on 4/14/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import SnapKit

struct SignUpConfigs {
    let logoUrl = "https://longterminvestments.ru/wp-content/uploads/2019/11/freedom-logo1.png"
}

final class SignUpViewController: BaseViewController<SignUpPresenterInterface> {
    fileprivate let config = SignUpConfigs()

    fileprivate let logoImage = UIImageView()

    fileprivate let scrollView = UIScrollView({
        $0.translatesAutoresizingMaskIntoConstraints = false
    })

    fileprivate lazy var nextButton = ElevatedButton.init({
        $0.setTitle("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", for: .normal)
        $0.addAction {[weak self] in
            guard let `self` = self else { return }
            Logger.debug(self.description)
        }
    })

    fileprivate let phoneTextField = CustomTextField({
        $0.keyboardType = .phonePad
        $0.backgroundColor = .white
        $0.font = .defaultRegularBody
        $0.placeholder = "–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
    })

    fileprivate let firstTextField = CustomTextField({
        $0.keyboardType = .phonePad
        $0.backgroundColor = .white
        $0.font = .defaultRegularBody
        $0.placeholder = "–í–∞—à–µ –∏–º—è"

    })

    fileprivate let lastTextField = CustomTextField({
        $0.keyboardType = .phonePad
        $0.backgroundColor = .white
        $0.font = .defaultRegularBody
        $0.placeholder = "–í–∞—à–∞ –§–∞–º–∏–ª–∏—è"
    })
    
    fileprivate let stackView = UIStackView({
        $0.axis = .vertical
        $0.translatesAutoresizingMaskIntoConstraints = false
    })
    
    fileprivate let headlineText = RegularCallout({
        $0.numberOfLines = 0
        $0.textAlignment = .center
    })
    
    override func setupViews() {
        super.setupViews()
        self.view.addSubview(scrollView)
        self.scrollView.addSubview(stackView)
        self.stackView.addArrangedSubview(logoImage)
        self.stackView.setCustomSpacing(kHeadlinePadding * 3, after: logoImage)
        self.stackView.addArrangedSubview(headlineText)
        self.stackView.setCustomSpacing(kHeadlinePadding, after: headlineText)
        
        self.stackView.addArrangedSubview(phoneTextField)
        self.stackView.setCustomSpacing(kLowPadding, after: phoneTextField)
        let phoneHint = RegularFootnote({ $0.text = "    " + "–ù–∞–ø—Ä–∏–º–µ—Ä +77761595595" })
        self.stackView.addArrangedSubview(phoneHint)
        self.stackView.setCustomSpacing(kHeadlinePadding, after: phoneHint)
        
        self.stackView.addArrangedSubview(firstTextField)
        self.stackView.setCustomSpacing(kLowPadding, after: firstTextField)
        let firstHint = RegularFootnote({ $0.text = "    " + "–ù–∞–ø—Ä–∏–º–µ—Ä –ò–≤–∞–Ω" })
        self.stackView.addArrangedSubview(firstHint)
        self.stackView.setCustomSpacing(kHeadlinePadding, after: firstHint)
        
        self.stackView.addArrangedSubview(lastTextField)
        self.stackView.setCustomSpacing(kLowPadding, after: lastTextField)
        let lastHint = RegularFootnote({ $0.text = "    " + "–ù–∞–ø—Ä–∏–º–µ—Ä –ò–≤–∞–Ω–æ–≤" })
        self.stackView.addArrangedSubview(lastHint)
        self.stackView.setCustomSpacing(kHeadlinePadding * 2, after: lastHint)
        
        let nextStack = UIStackView({
            $0.alignment = .center
            $0.distribution = .equalCentering
            
            $0.addArrangedSubview(UIView())
            $0.addArrangedSubview(nextButton)
            $0.addArrangedSubview(UIView())
        })
        self.stackView.addArrangedSubview(nextStack)
        self.stackView.setCustomSpacing(kHeadlinePadding * 2, after: nextStack)
        
    }

    override func setupConstraints() {
        super.setupConstraints()

        self.scrollView.snp.makeConstraints { make in
            make.edges.equalToSuperview()
            make.width.equalToSuperview()
        }

        self.stackView.snp.makeConstraints { make in
            make.edges.equalToSuperview()
            make.width.equalToSuperview()
        }
        
        self.logoImage.snp.makeConstraints { make in
            make.height.equalTo(kHeadlinePadding * 2)
        }
        
        self.nextButton.snp.makeConstraints { make in
            make.height.equalTo(kMediumPadding * 3)
            make.left.right.equalTo(kHeadlinePadding)
            make.right.equalTo(-kHeadlinePadding)
        }
    }
    
    override func setupInitialData() {
        super.setupInitialData()
        self.logoImage.loadImage(by: self.config.logoUrl)
        self.headlineText.text = "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —á–∞—Ç —Å–µ—Ä–≤–∏—Å–µ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ"
    }
}

extension SignUpViewController: SignUpViewInterface {
}
