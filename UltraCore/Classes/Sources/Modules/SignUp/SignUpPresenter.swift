//
//  SignUpPresenter.swift
//  Pods
//
//  Created by Slam on 4/14/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//
  import NIO
import Foundation
import GRPC

final class SignUpPresenter {

    // MARK: - Private properties -

    private unowned let view: SignUpViewInterface
//    private let interactor: SignUpInteractorInterface
    private let wireframe: SignUpWireframeInterface

    // MARK: - Lifecycle -

    init(
        view: SignUpViewInterface,
//        interactor: SignUpInteractorInterface,
        wireframe: SignUpWireframeInterface
    ) {
        self.view = view
//        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension SignUpPresenter: SignUpPresenterInterface {
    func login(lastName: String, firstname: String, phone number: String) {
        do {
            let group = MultiThreadedEventLoopGroup.init(numberOfThreads: 1)

            var params = GetUserIdRequest.init()
            params.firstname = firstname
            params.lastname = lastName
            params.phone = number
            
            let channel = try GRPCChannelPool.with(
                target: .host("ultra-dev.typi.team", port: 8080),
                transportSecurity: .plaintext,
                eventLoopGroup : group)
            let response = try AuthServiceNIOClient(channel:channel).issueJwt(IssueJwtRequest.init()).response.wait()
            print(response.code)
            
        }catch let exception {
            Logger.debug(exception.localizedDescription)
        }
        
        
        
    }
    
}
