//
//  ConversationsWireframe.swift
//  Pods
//
//  Created by Slam on 4/20/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class ConversationsWireframe: BaseWireframe<ConversationsViewController> {

    // MARK: - Private properties -
    fileprivate weak var delegate: UltraCoreSettingsDelegate?

    // MARK: - Module setup -

    init(appDelegate: UltraCoreSettingsDelegate?) {
        self.delegate = appDelegate
        let moduleViewController = ConversationsViewController()
        super.init(viewController: moduleViewController)

        let deleteConversationInteractor = DeleteConversationInteractor(conversationDBService: appSettings.conversationDBService,
                                                                        conversationService: appSettings.conversationService)
        
        let retrieveContactStatusesInteractor = RetrieveContactStatusesInteractor.init(appStore: appSettings.appStore,
                                                                                       contactDBService: appSettings.contactDBService,
                                                                                       contactService: appSettings.contactsService)
        let presenter = ConversationsPresenter(view: moduleViewController,
                                               updateRepository: appSettings.updateRepository,
                                               messageRepository: appSettings.messageRespository,
                                               contactsRepository: appSettings.contactRepository,
                                               wireframe: self,
                                               conversationRepository: appSettings.conversationRespository,
                                               retrieveContactStatusesInteractor: retrieveContactStatusesInteractor,
                                               deleteConversationInteractor: deleteConversationInteractor,
                                               userStatusUpdateInteractor: UpdateOnlineInteractor(userService: appSettings.userService))
        moduleViewController.presenter = presenter
    }
}

// MARK: - Extensions -

extension ConversationsWireframe: ConversationsWireframeInterface {
    
    func navigateToContacts(contactsCallback: @escaping ContactsCallback) {
        if let contactsViewController = self.delegate?.contactsViewController(callback: contactsCallback) {
            self.navigationController?.pushViewController(contactsViewController, animated: true)
        }else {
            self.navigationController?.presentWireframeWithNavigation(ContactsBookWireframe(contactsCallback: contactsCallback))
        }
    }
    
    func navigateToConversation(with data: Conversation) {
        self.navigationController?.pushWireframe(ConversationWireframe(with: data))
    }
}
